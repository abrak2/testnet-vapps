# vApp Submission: Decentralized KYC Vault

## Verification
```yaml
github_username: "abrak_"
discord_id: "994625305111183503"
timestamp: "2025-08-30"
```

## Developer
- **Name**: abrak
- **GitHub**: abrak_
- **Discord**: abrak_
- **Experience**: Web3 developer with background in smart contracts, zk-SNARK circuits, and decentralized identity systems. Contributed to multiple DeFi and privacy-preserving dApps.

## Project

### Name & Category
- **Project**: Decentralized KYC Vault
- **Category**: identity

### Description
- A privacy-preserving KYC (Know Your Customer) vault that allows users to complete identity verification once and reuse proofs across multiple dApps without re-sharing sensitive documents.
This improves user experience, reduces compliance risks for dApps, and preserves privacy through zero-knowledge proofs.

### SL Integration  
- Use Soundness Layer (SL) for encrypted KYC data storage.
- Use SL identity attestation to ensure uniqueness and prevent Sybil attacks.
- Register zk-SNARK proofs on SL smart contracts so dApps can verify compliance without accessing raw data.

## Technical

### Architecture
- User Onboarding: Users upload KYC docs to a verifier, encrypted & stored via SL.
- Proof Generation: zk-SNARK circuit generates proof (e.g., “KYC passed”, “over 18”, “citizen of X”).
- Proof Registry: Proof stored in SL contract, bound to user’s wallet.
- Verification: dApps call SL contract to validate proof without viewing documents.

### Stack
- Frontend: React + Tailwind
- Backend: Node.js + Express
- Blockchain: Soundness Layer (primary) + EVM-compatible chain for integration tests

Storage: SL storage + WALRUS (for encrypted off-chain docs)

### Features
- One-time KYC verification → reusable proofs across dApps
- zk-SNARK circuits for selective disclosure (e.g., verify age without showing DOB)
- dApp API to query proof validity without handling sensitive data

## Timeline

PoC (2-4 weeks)
- Implement basic smart contract for proof registry
- Build zk-SNARK circuit for “KYC passed” condition
- Integrate with SL encrypted storage
- Create simple demo UI

MVP (4-8 weeks)
- Expand zk circuits (age, country, uniqueness)
- Full integration with SL APIs + wallet binding
- Deploy demo app for dApps to consume proofs
- User testing + feedback iteration

## Innovation
- First SL-native decentralized KYC vault with reusable proofs
- Removes compliance overhead for dApps by abstracting KYC handling
- Protects user privacy with zk proofs instead of document sharing
- Enables one-human-one-wallet Sybil resistance for airdrops, DAOs, and DeFi

## Contact
- Preferred contact: abrak_
- Updates shared via: GitHub repo + Soundness Layer Discord


**Checklist before submitting:**
- [X] All fields completed
- [X] GitHub username matches PR author  
- [X] SL integration explained
- [X] Timeline is realistic
